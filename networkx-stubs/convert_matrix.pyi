# Stubs for networkx.convert_matrix (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

def to_pandas_adjacency(
    G: Any,
    nodelist: Any | None = ...,
    dtype: Any | None = ...,
    order: Any | None = ...,
    multigraph_weight: Any = ...,
    weight: str = ...,
    nonedge: float = ...,
): ...
def from_pandas_adjacency(df: Any, create_using: Any | None = ...): ...
def to_pandas_edgelist(
    G: Any, source: str = ..., target: str = ..., nodelist: Any | None = ..., dtype: Any | None = ..., order: Any | None = ...
): ...
def from_pandas_edgelist(
    df: Any, source: str = ..., target: str = ..., edge_attr: Any | None = ..., create_using: Any | None = ...
): ...
def to_numpy_matrix(
    G: Any,
    nodelist: Any | None = ...,
    dtype: Any | None = ...,
    order: Any | None = ...,
    multigraph_weight: Any = ...,
    weight: str = ...,
    nonedge: float = ...,
): ...
def from_numpy_matrix(A: Any, parallel_edges: bool = ..., create_using: Any | None = ...): ...
def to_numpy_recarray(G: Any, nodelist: Any | None = ..., dtype: Any | None = ..., order: Any | None = ...): ...
def to_scipy_sparse_matrix(G: Any, nodelist: Any | None = ..., dtype: Any | None = ..., weight: str = ..., format: str = ...): ...
def from_scipy_sparse_matrix(A: Any, parallel_edges: bool = ..., create_using: Any | None = ..., edge_attribute: str = ...): ...
def to_numpy_array(
    G: Any,
    nodelist: Any | None = ...,
    dtype: Any | None = ...,
    order: Any | None = ...,
    multigraph_weight: Any = ...,
    weight: str = ...,
    nonedge: float = ...,
): ...
def from_numpy_array(A: Any, parallel_edges: bool = ..., create_using: Any | None = ...): ...
