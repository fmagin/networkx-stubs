# Stubs for networkx.utils.misc (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

basestring = str
unicode = str

def is_string_like(obj: Any) -> Any: ...
def iterable(obj: Any) -> Any: ...
def flatten(obj: Any, result: Any | None = ...) -> Any: ...
def is_list_of_ints(intlist: Any) -> Any: ...

PY2: Any

def make_str(x: Any) -> Any: ...
def generate_unique_node() -> Any: ...
def default_opener(filename: Any) -> None: ...
def dict_to_numpy_array(d: Any, mapping: Any | None = ...) -> Any: ...
def dict_to_numpy_array2(d: Any, mapping: Any | None = ...) -> Any: ...
def dict_to_numpy_array1(d: Any, mapping: Any | None = ...) -> Any: ...
def is_iterator(obj: Any) -> Any: ...
def arbitrary_element(iterable: Any) -> Any: ...
def consume(iterator: Any) -> None: ...
def pairwise(iterable: Any, cyclic: bool = ...) -> Any: ...
def groups(many_to_one: Any) -> Any: ...
def to_tuple(x: Any) -> Any: ...
def create_random_state(random_state: Any | None = ...) -> Any: ...

class PythonRandomInterface:
    def __init__(self, rng: Any | None = ...) -> None: ...
    msg: str = ...
    def random(self) -> Any: ...
    def uniform(self, a: Any, b: Any) -> Any: ...
    def randrange(self, a: Any, b: Any | None = ...) -> Any: ...
    def choice(self, seq: Any) -> Any: ...
    def gauss(self, mu: Any, sigma: Any) -> Any: ...
    def shuffle(self, seq: Any) -> Any: ...
    def sample(self, seq: Any, k: Any) -> Any: ...
    def randint(self, a: Any, b: Any) -> Any: ...
    def expovariate(self, scale: Any) -> Any: ...
    def paretovariate(self, shape: Any) -> Any: ...

def create_py_random_state(random_state: Any | None = ...) -> Any: ...
def setup_module(module: Any) -> None: ...
