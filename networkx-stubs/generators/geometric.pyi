# Stubs for networkx.generators.geometric (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from _typeshed import Incomplete

def random_geometric_graph(
    n: Incomplete,
    radius: Incomplete,
    dim: int = ...,
    pos: Incomplete | None = ...,
    p: int = ...,
    seed: Incomplete | None = ...,
) -> Incomplete: ...
def soft_random_geometric_graph(
    n: Incomplete,
    radius: Incomplete,
    dim: int = ...,
    pos: Incomplete | None = ...,
    p: int = ...,
    p_dist: Incomplete | None = ...,
    seed: Incomplete | None = ...,
) -> Incomplete: ...
def geographical_threshold_graph(
    n: Incomplete,
    theta: Incomplete,
    dim: int = ...,
    pos: Incomplete | None = ...,
    weight: Incomplete | None = ...,
    metric: Incomplete | None = ...,
    p_dist: Incomplete | None = ...,
    seed: Incomplete | None = ...,
) -> Incomplete: ...
def waxman_graph(
    n: Incomplete,
    beta: float = ...,
    alpha: float = ...,
    L: Incomplete | None = ...,
    domain: Incomplete = ...,
    metric: Incomplete | None = ...,
    seed: Incomplete | None = ...,
) -> Incomplete: ...
def navigable_small_world_graph(
    n: Incomplete,
    p: int = ...,
    q: int = ...,
    r: int = ...,
    dim: int = ...,
    seed: Incomplete | None = ...,
) -> Incomplete: ...
def thresholded_random_geometric_graph(
    n: Incomplete,
    radius: Incomplete,
    theta: Incomplete,
    dim: int = ...,
    pos: Incomplete | None = ...,
    weight: Incomplete | None = ...,
    p: int = ...,
    seed: Incomplete | None = ...,
) -> Incomplete: ...
