# Stubs for networkx.generators.classic (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

def full_rary_tree(r: Any, n: Any, create_using: Any | None = ...) -> Any: ...
def balanced_tree(r: Any, h: Any, create_using: Any | None = ...) -> Any: ...
def barbell_graph(m1: Any, m2: Any, create_using: Any | None = ...) -> Any: ...
def complete_graph(n: Any, create_using: Any | None = ...) -> Any: ...
def circular_ladder_graph(n: Any, create_using: Any | None = ...) -> Any: ...
def circulant_graph(n: Any, offsets: Any, create_using: Any | None = ...) -> Any: ...
def cycle_graph(n: Any, create_using: Any | None = ...) -> Any: ...
def dorogovtsev_goltsev_mendes_graph(n: Any, create_using: Any | None = ...) -> Any: ...
def empty_graph(n: int = ..., create_using: Any | None = ..., default: Any = ...) -> Any: ...
def ladder_graph(n: Any, create_using: Any | None = ...) -> Any: ...
def lollipop_graph(m: Any, n: Any, create_using: Any | None = ...) -> Any: ...
def null_graph(create_using: Any | None = ...) -> Any: ...
def path_graph(n: Any, create_using: Any | None = ...) -> Any: ...
def star_graph(n: Any, create_using: Any | None = ...) -> Any: ...
def trivial_graph(create_using: Any | None = ...) -> Any: ...
def turan_graph(n: Any, r: Any) -> Any: ...
def wheel_graph(n: Any, create_using: Any | None = ...) -> Any: ...
def complete_multipartite_graph(*subset_sizes: Any) -> Any: ...
