# Stubs for networkx.drawing.layout (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from _typeshed import Incomplete

def random_layout(
    G: Incomplete,
    center: Incomplete | None = ...,
    dim: int = ...,
    seed: Incomplete | None = ...,
) -> Incomplete: ...
def circular_layout(
    G: Incomplete, scale: int = ..., center: Incomplete | None = ..., dim: int = ...
) -> Incomplete: ...
def shell_layout(
    G: Incomplete,
    nlist: Incomplete | None = ...,
    scale: int = ...,
    center: Incomplete | None = ...,
    dim: int = ...,
) -> Incomplete: ...
def bipartite_layout(
    G: Incomplete,
    nodes: Incomplete,
    align: str = ...,
    scale: int = ...,
    center: Incomplete | None = ...,
    aspect_ratio: Incomplete = ...,
) -> Incomplete: ...
def fruchterman_reingold_layout(
    G: Incomplete,
    k: Incomplete | None = ...,
    pos: Incomplete | None = ...,
    fixed: Incomplete | None = ...,
    iterations: int = ...,
    threshold: float = ...,
    weight: str = ...,
    scale: int = ...,
    center: Incomplete | None = ...,
    dim: int = ...,
    seed: Incomplete | None = ...,
) -> Incomplete: ...

spring_layout = fruchterman_reingold_layout

def kamada_kawai_layout(
    G: Incomplete,
    dist: Incomplete | None = ...,
    pos: Incomplete | None = ...,
    weight: str = ...,
    scale: int = ...,
    center: Incomplete | None = ...,
    dim: int = ...,
) -> Incomplete: ...
def spectral_layout(
    G: Incomplete,
    weight: str = ...,
    scale: int = ...,
    center: Incomplete | None = ...,
    dim: int = ...,
) -> Incomplete: ...
def planar_layout(
    G: Incomplete, scale: int = ..., center: Incomplete | None = ..., dim: int = ...
) -> Incomplete: ...
def rescale_layout(pos: Incomplete, scale: int = ...) -> Incomplete: ...
