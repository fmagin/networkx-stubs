# Stubs for networkx.algorithms.tree.branchings (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

from .recognition import *

def branching_weight(G: Any, attr: str = ..., default: int = ...): ...
def greedy_branching(G: Any, attr: str = ..., default: int = ..., kind: str = ..., seed: Any | None = ...): ...

class Edmonds:
    G_original: Any = ...
    store: bool = ...
    edges: Any = ...
    template: Any = ...
    def __init__(self, G: Any, seed: Any | None = ...) -> None: ...
    def find_optimum(
        self,
        attr: str = ...,
        default: int = ...,
        kind: str = ...,
        style: str = ...,
        preserve_attrs: bool = ...,
        seed: Any | None = ...,
    ): ...

def maximum_branching(G: Any, attr: str = ..., default: int = ..., preserve_attrs: bool = ...): ...
def minimum_branching(G: Any, attr: str = ..., default: int = ..., preserve_attrs: bool = ...): ...
def maximum_spanning_arborescence(G: Any, attr: str = ..., default: int = ..., preserve_attrs: bool = ...): ...
def minimum_spanning_arborescence(G: Any, attr: str = ..., default: int = ..., preserve_attrs: bool = ...): ...
