# Stubs for networkx.algorithms.simple_paths (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, TypeVar
from collections.abc import Iterator

from networkx.classes.graph import Graph

_T = TypeVar("_T")

def is_simple_path(G: Graph[_T], nodes: list[_T]) -> Any: ...
def all_simple_paths(
    G: Graph[_T], source: _T, target: _T, cutoff: Any | None = ...
) -> Iterator[list[_T]]: ...
def shortest_simple_paths(
    G: Graph[_T], source: _T, target: _T, weight: Any | None = ...
) -> Iterator[list[_T]]: ...

class PathBuffer:
    paths: Any = ...
    sortedpaths: Any = ...
    counter: Any = ...
    def __init__(self) -> None: ...
    def __len__(self) -> Any: ...
    def push(self, cost: Any, path: Any) -> None: ...
    def pop(self) -> Any: ...
