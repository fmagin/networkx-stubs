# Stubs for networkx.algorithms.centrality.flow_matrix (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

def flow_matrix_row(
    G: Any, weight: Any | None = ..., dtype: Any = ..., solver: str = ...
) -> None: ...

class InverseLaplacian:
    dtype: Any = ...
    n: Any = ...
    w: Any = ...
    C: Any = ...
    L1: Any = ...
    def __init__(
        self, L: Any, width: Any | None = ..., dtype: Any | None = ...
    ) -> None: ...
    def init_solver(self, L: Any) -> None: ...
    def solve(self, r: Any) -> None: ...
    def solve_inverse(self, r: Any) -> None: ...
    def get_rows(self, r1: Any, r2: Any) -> Any: ...
    def get_row(self, r: Any) -> Any: ...
    def width(self, L: Any) -> Any: ...

class FullInverseLaplacian(InverseLaplacian):
    IL: Any = ...
    def init_solver(self, L: Any) -> None: ...
    def solve(self, rhs: Any) -> Any: ...
    def solve_inverse(self, r: Any) -> Any: ...

class SuperLUInverseLaplacian(InverseLaplacian):
    lusolve: Any = ...
    def init_solver(self, L: Any) -> None: ...
    def solve_inverse(self, r: Any) -> Any: ...
    def solve(self, rhs: Any) -> Any: ...

class CGInverseLaplacian(InverseLaplacian):
    M: Any = ...
    def init_solver(self, L: Any) -> None: ...
    def solve(self, rhs: Any) -> Any: ...
    def solve_inverse(self, r: Any) -> Any: ...

def laplacian_sparse_matrix(
    G: Any,
    nodelist: Any | None = ...,
    weight: Any | None = ...,
    dtype: Any | None = ...,
    format: str = ...,
) -> Any: ...
